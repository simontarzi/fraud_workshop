{"flowContents":{"identifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","instanceIdentifier":"84b0e80f-018a-1000-ffff-ffffb4f5f9d4","name":"Generators","comments":"","position":{"x":800.0,"y":0.0},"processGroups":[],"remoteProcessGroups":[],"processors":[{"identifier":"9480d9af-7ed0-3bff-963c-1f79dbc72f23","instanceIdentifier":"84b0fc33-018a-1000-0000-00004f142324","name":"Handle Scoring Response","comments":"","position":{"x":400.0,"y":384.0},"type":"org.apache.nifi.processors.standard.HandleHttpResponse","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"HTTP Context Map":"f7c06c8b-4128-327f-90b7-35c31de3154f","Attributes to add to the HTTP Response (Regex)":null,"HTTP Status Code":"200"},"propertyDescriptors":{"HTTP Context Map":{"name":"HTTP Context Map","displayName":"HTTP Context Map","identifiesControllerService":true,"sensitive":false},"Attributes to add to the HTTP Response (Regex)":{"name":"Attributes to add to the HTTP Response (Regex)","displayName":"Attributes to add to the HTTP Response (Regex)","identifiesControllerService":false,"sensitive":false},"HTTP Status Code":{"name":"HTTP Status Code","displayName":"HTTP Status Code","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["success","failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"ba200aab-ec75-361d-b76f-d5094cd31b38","instanceIdentifier":"84b0fb6a-018a-1000-ffff-ffffc74bfc74","name":"Handle Scoring Request","comments":"","position":{"x":400.0,"y":0.0},"type":"org.apache.nifi.processors.standard.HandleHttpRequest","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"multipart-request-max-size":"1 MB","parameters-to-attributes":null,"Allow POST":"true","Hostname":null,"Default URL Character Set":"UTF-8","Allow DELETE":"true","HTTP Protocols":"HTTP_1_1","Additional HTTP Methods":null,"container-queue-size":"50","HTTP Context Map":"f7c06c8b-4128-327f-90b7-35c31de3154f","multipart-read-buffer-size":"512 KB","SSL Context Service":null,"Allow OPTIONS":"false","Allowed Paths":null,"Allow GET":"true","Allow HEAD":"false","Listening Port":"5000","Client Authentication":"No Authentication","Allow PUT":"true"},"propertyDescriptors":{"multipart-request-max-size":{"name":"multipart-request-max-size","displayName":"Multipart Request Max Size","identifiesControllerService":false,"sensitive":false},"parameters-to-attributes":{"name":"parameters-to-attributes","displayName":"Parameters to Attributes List","identifiesControllerService":false,"sensitive":false},"Allow POST":{"name":"Allow POST","displayName":"Allow POST","identifiesControllerService":false,"sensitive":false},"Hostname":{"name":"Hostname","displayName":"Hostname","identifiesControllerService":false,"sensitive":false},"Default URL Character Set":{"name":"Default URL Character Set","displayName":"Default URL Character Set","identifiesControllerService":false,"sensitive":false},"Allow DELETE":{"name":"Allow DELETE","displayName":"Allow DELETE","identifiesControllerService":false,"sensitive":false},"HTTP Protocols":{"name":"HTTP Protocols","displayName":"HTTP Protocols","identifiesControllerService":false,"sensitive":false},"Additional HTTP Methods":{"name":"Additional HTTP Methods","displayName":"Additional HTTP Methods","identifiesControllerService":false,"sensitive":false},"container-queue-size":{"name":"container-queue-size","displayName":"Container Queue Size","identifiesControllerService":false,"sensitive":false},"HTTP Context Map":{"name":"HTTP Context Map","displayName":"HTTP Context Map","identifiesControllerService":true,"sensitive":false},"multipart-read-buffer-size":{"name":"multipart-read-buffer-size","displayName":"Multipart Read Buffer Size","identifiesControllerService":false,"sensitive":false},"SSL Context Service":{"name":"SSL Context Service","displayName":"SSL Context Service","identifiesControllerService":true,"sensitive":false},"Allow OPTIONS":{"name":"Allow OPTIONS","displayName":"Allow OPTIONS","identifiesControllerService":false,"sensitive":false},"Allowed Paths":{"name":"Allowed Paths","displayName":"Allowed Paths","identifiesControllerService":false,"sensitive":false},"Allow GET":{"name":"Allow GET","displayName":"Allow GET","identifiesControllerService":false,"sensitive":false},"Allow HEAD":{"name":"Allow HEAD","displayName":"Allow HEAD","identifiesControllerService":false,"sensitive":false},"Listening Port":{"name":"Listening Port","displayName":"Listening Port","identifiesControllerService":false,"sensitive":false},"Client Authentication":{"name":"Client Authentication","displayName":"Client Authentication","identifiesControllerService":false,"sensitive":false},"Allow PUT":{"name":"Allow PUT","displayName":"Allow PUT","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"fbabe03d-e2c8-3009-bdf8-7cfb5ea3f1b1","instanceIdentifier":"84b0fafe-018a-1000-ffff-ffffed9f10ad","name":"Send Transaction Data","comments":"","position":{"x":0.0,"y":192.0},"type":"org.apache.nifi.processors.standard.PutTCP","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"Idle Connection Expiration":"15 seconds","Outgoing Message Delimiter":"\\n","Max Size of Socket Send Buffer":"1 MB","SSL Context Service":null,"Timeout":"10 seconds","Port":"#{input.port}","Hostname":"#{input.host}","Connection Per FlowFile":"true","Character Set":"UTF-8"},"propertyDescriptors":{"Idle Connection Expiration":{"name":"Idle Connection Expiration","displayName":"Idle Connection Expiration","identifiesControllerService":false,"sensitive":false},"Outgoing Message Delimiter":{"name":"Outgoing Message Delimiter","displayName":"Outgoing Message Delimiter","identifiesControllerService":false,"sensitive":false},"Max Size of Socket Send Buffer":{"name":"Max Size of Socket Send Buffer","displayName":"Max Size of Socket Send Buffer","identifiesControllerService":false,"sensitive":false},"SSL Context Service":{"name":"SSL Context Service","displayName":"SSL Context Service","identifiesControllerService":true,"sensitive":false},"Timeout":{"name":"Timeout","displayName":"Timeout","identifiesControllerService":false,"sensitive":false},"Port":{"name":"Port","displayName":"Port","identifiesControllerService":false,"sensitive":false},"Hostname":{"name":"Hostname","displayName":"Hostname","identifiesControllerService":false,"sensitive":false},"Connection Per FlowFile":{"name":"Connection Per FlowFile","displayName":"Connection Per FlowFile","identifiesControllerService":false,"sensitive":false},"Character Set":{"name":"Character Set","displayName":"Character Set","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["success","failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"4a25aa8d-92d5-342b-a5ee-4e44490dbeb6","instanceIdentifier":"84b0fbc4-018a-1000-ffff-ffffa61e756d","name":"Craft response","comments":"","position":{"x":400.0,"y":192.0},"type":"org.apache.nifi.processors.standard.ReplaceText","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"Regular Expression":"(?s)(^.*$)","Replacement Value":"{\"fraud_score\": 0.${random()}}","Evaluation Mode":"Entire text","Line-by-Line Evaluation Mode":"All","Character Set":"UTF-8","Maximum Buffer Size":"1 MB","Replacement Strategy":"Regex Replace"},"propertyDescriptors":{"Regular Expression":{"name":"Regular Expression","displayName":"Search Value","identifiesControllerService":false,"sensitive":false},"Replacement Value":{"name":"Replacement Value","displayName":"Replacement Value","identifiesControllerService":false,"sensitive":false},"Evaluation Mode":{"name":"Evaluation Mode","displayName":"Evaluation Mode","identifiesControllerService":false,"sensitive":false},"Line-by-Line Evaluation Mode":{"name":"Line-by-Line Evaluation Mode","displayName":"Line-by-Line Evaluation Mode","identifiesControllerService":false,"sensitive":false},"Character Set":{"name":"Character Set","displayName":"Character Set","identifiesControllerService":false,"sensitive":false},"Maximum Buffer Size":{"name":"Maximum Buffer Size","displayName":"Maximum Buffer Size","identifiesControllerService":false,"sensitive":false},"Replacement Strategy":{"name":"Replacement Strategy","displayName":"Replacement Strategy","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"ec9f7680-b2e8-3334-922c-18983a389e56","instanceIdentifier":"84b0e9a1-018a-1000-ffff-ffffbdb0515f","name":"Generate Transaction Data","comments":"","position":{"x":0.0,"y":0.0},"type":"org.apache.nifi.processors.script.InvokeScriptedProcessor","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"Script File":null,"fraud-freq-max":"15","cities":"[\n  { \"city\": \"Melbourne\", \"lon\": 144.904883,\"lat\": -37.7944514 }, \n  { \"city\": \"Sydney\", \"lon\": 150.8851715, \"lat\": -33.7761271 }, \n  { \"city\": \"Perth\", \"lon\": 115.8214564, \"lat\": -32.0396959 }, \n  { \"city\": \"Canberra\", \"lon\": 149.1270107, \"lat\": -35.2813003 }, \n  { \"city\": \"Brisbane\", \"lon\": 152.8531169, \"lat\": -27.3817681 }, \n  { \"city\": \"Adelaide\", \"lon\": 138.4710808, \"lat\": -35.0004053 }, \n  { \"city\": \"Auckland\", \"lon\": 174.6360824, \"lat\": -36.859653 }, \n  { \"city\": \"Wellington\", \"lon\": 174.8563103, \"lat\": -41.2730169 }, \n  { \"city\": \"Christchurch\", \"lon\": 172.5130723, \"lat\": -43.5510444 }, \n  { \"city\": \"Queenstown\", \"lon\": 168.6647798, \"lat\": -44.9967799 }\n]\n","Script Engine":"python","Script Body":"import json\nimport math\nimport random\nimport sys\nimport time\nimport uuid\nfrom datetime import datetime, timedelta\nfrom java.lang import Throwable\nfrom org.apache.nifi.components import PropertyDescriptor\nfrom org.apache.nifi.processor import Processor, Relationship\nfrom org.apache.nifi.processor.io import OutputStreamCallback\nfrom org.apache.nifi.processor.util import StandardValidators\nfrom org.python.core import PySet\nfrom org.apache.nifi.components import ValidationResult\n\nCITIES_DEFAULT = [\n    {'lat': -37.7944514, 'lon': 144.904883, 'city': 'Melbourne'},\n    {'lat': -33.7761271, 'lon': 150.8851715, 'city': 'Sydney'},\n    {'lat': -32.0396959, 'lon': 115.8214564, 'city': 'Perth'},\n    {'lat': -35.2813003, 'lon': 149.1270107, 'city': 'Canberra'},\n    {'lat': -27.3817681, 'lon': 152.8531169, 'city': 'Brisbane'},\n    {'lat': -35.0004053, 'lon': 138.4710808, 'city': 'Adelaide'},\n    {'lat': -36.859653, 'lon': 174.6360824, 'city': 'Auckland'},\n    {'lat': -41.2730169, 'lon': 174.8563103, 'city': 'Wellington'},\n    {'lat': -43.5510444, 'lon': 172.5130723, 'city': 'Christchurch'},\n    {'lat': -44.9967799, 'lon': 168.6647798, 'city': 'Queenstown'},\n]\n\n\nclass PyOutputStreamCallback(OutputStreamCallback):\n  def __init__(self, content=None):\n      self._content = content\n\n  def process(self, outputStream):\n      outputStream.write(bytearray(self._content.encode('utf-8')))\n\n  def content(self, content):\n      self._content = content\n      return self\n\n\nclass FraudGeneratorProcessor(Processor):\n    PROP_FRAUD_FREQ_MIN = (PropertyDescriptor.Builder()\n        .name('fraud-freq-min')\n        .displayName('Fraud frequency minimum (ticks)')\n        .description('Lower bound for the range of fraud frequency.')\n        .expressionLanguageSupported(True)\n        .required(True)\n        .defaultValue('5')\n        .addValidator(StandardValidators.NUMBER_VALIDATOR)\n        .build())\n    PROP_FRAUD_FREQ_MAX = (PropertyDescriptor.Builder()\n        .name('fraud-freq-max')\n        .displayName('Fraud frequency maximum (ticks)')\n        .description('Upper bound for the range of fraud frequency.')\n        .expressionLanguageSupported(True)\n        .required(True)\n        .defaultValue('15')\n        .addValidator(StandardValidators.NUMBER_VALIDATOR)\n        .build())\n    PROP_CITIES = (PropertyDescriptor.Builder()\n        .name('cities')\n        .displayName('Cities')\n        .description('List of cities in JSON format. Each city is an object with the following attributes: lat, lon, city.')\n        .expressionLanguageSupported(True)\n        .required(True)\n        .defaultValue(json.dumps(CITIES_DEFAULT, indent=2))\n        .addValidator(StandardValidators.NON_EMPTY_VALIDATOR)\n        .build())\n\n    def __init__(self):\n        self.REL_SUCCESS = Relationship.Builder().name('success').description('FlowFiles that were successfully processed').build()\n        self.log = None\n        self.out = None\n        self.cities = None\n        self.fraud_countdown = None\n\n    def initialize(self, context):\n        self.log = context.getLogger()\n        self.out = PyOutputStreamCallback()\n\n    def getRelationships(self):\n        return PySet([self.REL_SUCCESS])\n\n    def validate(self, context):\n        try:\n            json.loads(context.getProperty(self.PROP_CITIES).getValue())\n        except Exception as exc:\n            error = (ValidationResult.Builder()\n                .subject('Cities')\n                .valid(False)\n                .explanation('it is not a valid JSON')\n                .build())\n            return [error]\n        return None\n\n    def getPropertyDescriptors(self):\n        return [self.PROP_CITIES, self.PROP_FRAUD_FREQ_MIN, self.PROP_FRAUD_FREQ_MAX]\n\n    def onPropertyModified(self, descriptor, oldValue, newValue):\n        pass\n\n    def getIdentifier(self):\n        return None\n\n    def onTrigger(self, context, sessionFactory):\n        session = sessionFactory.createSession()\n        self.cities = self._get_cities(context)\n        self._update_fraud_countdown(context)\n        try:\n            tx = self._create_transaction()\n            self._send_transaction(session, tx)\n            if self._should_generate_fraud():\n                fraud_tx = self._create_transaction(tx, random.randint(60,600))\n                self._send_transaction(session, fraud_tx)\n            session.commit()\n        except Throwable, t:\n            self.log.error('{} failed to process due to {}; rolling back session', [self, t])\n            session.rollback(true)\n            raise t\n\n    def _send_transaction(self, session, tx):\n        flowfile = session.create()\n        flowfile = session.putAttribute(flowfile, 'fraud_countdown', str(self.fraud_countdown))\n        flowfile = session.write(flowfile, self.out.content(json.dumps(tx)))\n        session.transfer(flowfile, self.REL_SUCCESS)\n\n    def _create_random_point(self, x0, y0, distance):\n        r = distance/111300\n        u = random.random()\n        v = random.random()\n        w = r * math.sqrt(u)\n        t = 2 * math.pi * v\n        x = w * math.cos(t)\n        x1 = x / math.cos(y0)\n        y = w * math.sin(t)\n        return (x0+x1, y0 +y)\n\n    def _create_geopoint(self, lat, lon):\n        return self._create_random_point(lat, lon, 50000)\n\n    def _get_latlon(self):\n        geo = random.choice(self.cities)\n        return self._create_geopoint(geo['lat'], geo['lon'])\n\n    def _create_transaction(self, orig_tx=None, delta_secs=0):\n        \"\"\"Creates a single financial transaction using the following\n        \"\"\"\n        latlon = self._get_latlon()\n        ts = (datetime.now() - timedelta(seconds=delta_secs)).strftime('%Y-%m-%d %H:%M:%S')\n        return {\n          'ts': ts,\n          'account_id': orig_tx['account_id'] if orig_tx else str(random.randint(1, 1000)),\n          'transaction_id': ('xxx' + orig_tx['transaction_id']) if orig_tx else str(uuid.uuid1()),\n          'amount': random.randrange(1,2000),\n          'lat': latlon[0],\n          'lon': latlon[1]\n        }\n\n    def _create_fraudtran(self, tx, delta_time):\n        \"\"\"Creates a single fraudulent financial transaction\n        Note: the fraudulent transaction will have the same account ID as\n        the original transaction but different location and ammount.\n        \"\"\"\n        latlon = get_latlon()\n        tsbis = str((datetime.now() - timedelta(seconds=random.randint(60,600))).strftime('%Y-%m-%d %H:%M:%S '))\n\n        fraudtran = {\n          'ts' : tsbis,\n          'account_id' : fintran['account_id'],\n          'transaction_id' : 'xxx' + str(fintran['transaction_id']),\n          'amount' : random.randrange(1,2000),\n          'lat' : latlon[0],\n          'lon' : latlon[1]\n        }\n        return (fraudtran)\n\n    def _update_fraud_countdown(self, context):\n        if self.fraud_countdown is None or self.fraud_countdown <= 0:\n            freq_min = int(context.getProperty('fraud-freq-min').getValue())\n            freq_max = int(context.getProperty('fraud-freq-max').getValue())\n            self.fraud_countdown = random.randint(freq_min, freq_max)\n        elif self.fraud_countdown > 0:\n            self.fraud_countdown -= 1\n\n    def _should_generate_fraud(self):\n        return self.fraud_countdown <= 0\n\n    def _get_cities(self, context):\n        cities = context.getProperty('cities').getValue()\n        return json.loads(cities)\n\n\nprocessor = FraudGeneratorProcessor()\n","fraud-freq-min":"5","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"fraud-freq-max":{"name":"fraud-freq-max","displayName":"Fraud frequency maximum (ticks)","identifiesControllerService":false,"sensitive":false},"cities":{"name":"cities","displayName":"Cities","identifiesControllerService":false,"sensitive":false},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"fraud-freq-min":{"name":"fraud-freq-min","displayName":"Fraud frequency minimum (ticks)","identifiesControllerService":false,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["FILE","DIRECTORY"]}}},"style":{},"schedulingPeriod":"1 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"}],"inputPorts":[],"outputPorts":[],"connections":[{"identifier":"e7761c47-6346-3921-b692-2906cb820cf3","instanceIdentifier":"84b0fc4b-018a-1000-0000-00004f7b78fc","name":"response","source":{"id":"4a25aa8d-92d5-342b-a5ee-4e44490dbeb6","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Craft response","comments":"","instanceIdentifier":"84b0fbc4-018a-1000-ffff-ffffa61e756d"},"destination":{"id":"9480d9af-7ed0-3bff-963c-1f79dbc72f23","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Handle Scoring Response","comments":"","instanceIdentifier":"84b0fc33-018a-1000-0000-00004f142324"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success","failure"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"6e095f22-8f69-3c7a-b89e-d24cf48c5fad","instanceIdentifier":"84b0fb11-018a-1000-0000-00004797a6d7","name":"txn_data","source":{"id":"ec9f7680-b2e8-3334-922c-18983a389e56","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Generate Transaction Data","comments":"","instanceIdentifier":"84b0e9a1-018a-1000-ffff-ffffbdb0515f"},"destination":{"id":"fbabe03d-e2c8-3009-bdf8-7cfb5ea3f1b1","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Send Transaction Data","comments":"","instanceIdentifier":"84b0fafe-018a-1000-ffff-ffffed9f10ad"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"},{"identifier":"88c5c8c3-de3d-31a6-8599-533fffd793ce","instanceIdentifier":"84b0fbdd-018a-1000-ffff-fffffba66771","name":"request","source":{"id":"ba200aab-ec75-361d-b76f-d5094cd31b38","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Handle Scoring Request","comments":"","instanceIdentifier":"84b0fb6a-018a-1000-ffff-ffffc74bfc74"},"destination":{"id":"4a25aa8d-92d5-342b-a5ee-4e44490dbeb6","type":"PROCESSOR","groupId":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9","name":"Craft response","comments":"","instanceIdentifier":"84b0fbc4-018a-1000-ffff-ffffa61e756d"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"}],"labels":[],"funnels":[],"controllerServices":[{"identifier":"f7c06c8b-4128-327f-90b7-35c31de3154f","instanceIdentifier":"84b0e8f7-018a-1000-0000-00005f08d0d5","name":"StandardHttpContextMap","type":"org.apache.nifi.http.StandardHttpContextMap","bundle":{"group":"org.apache.nifi","artifact":"nifi-http-context-map-nar","version":"1.18.0.2.1.5.1-1"},"properties":{"Request Expiration":"1 min","Maximum Outstanding Requests":"5000"},"propertyDescriptors":{"Request Expiration":{"name":"Request Expiration","displayName":"Request Expiration","identifiesControllerService":false,"sensitive":false},"Maximum Outstanding Requests":{"name":"Maximum Outstanding Requests","displayName":"Maximum Outstanding Requests","identifiesControllerService":false,"sensitive":false}},"controllerServiceApis":[{"type":"org.apache.nifi.http.HttpContextMap","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-services-api-nar","version":"1.18.0.2.1.5.1-1"}}],"scheduledState":"DISABLED","bulletinLevel":"WARN","componentType":"CONTROLLER_SERVICE","groupIdentifier":"7c3e4e29-1b4a-3f7d-ab52-8423fbe3eae9"}],"variables":{},"parameterContextName":"fraud-params","defaultFlowFileExpiration":"0 sec","defaultBackPressureObjectThreshold":10000,"defaultBackPressureDataSizeThreshold":"1 GB","componentType":"PROCESS_GROUP","flowFileConcurrency":"UNBOUNDED","flowFileOutboundPolicy":"STREAM_WHEN_AVAILABLE"},"externalControllerServices":{},"parameterContexts":{"fraud-params":{"name":"fraud-params","parameters":[{"name":"transaction_table","sensitive":false,"provided":false,"value":"default.transactions"},{"name":"input.host","sensitive":false,"provided":false,"value":"${hostname()}"},{"name":"kafka.security.protocol","sensitive":false,"provided":false,"value":"PLAINTEXT"},{"name":"workload.password","sensitive":true,"provided":false},{"name":"kudu.master","sensitive":false,"provided":false,"value":"cdp.52.214.42.209.nip.io:7051"},{"name":"schema.registry.url","sensitive":false,"provided":false,"value":"http://cdp.52.214.42.209.nip.io:7788/api/v1"},{"name":"kafka.brokers","sensitive":false,"provided":false,"value":"cdp.52.214.42.209.nip.io:9092"},{"name":"kafka.sasl.mechanism","sensitive":false,"provided":false,"value":"GSSAPI"},{"name":"input.port","sensitive":false,"provided":false,"value":"6900"},{"name":"schema.name","sensitive":false,"provided":false,"value":"transactions"},{"name":"transaction_topic","sensitive":false,"provided":false,"value":"transactions"},{"name":"workload.user","sensitive":false,"provided":false,"value":"admin"},{"name":"model.endpoint.url","sensitive":false,"provided":false,"value":"http://${hostname()}:5000/model"},{"name":"fraud_topic","sensitive":false,"provided":false,"value":"fraud_suspects"}],"inheritedParameterContexts":[],"componentType":"PARAMETER_CONTEXT"}},"flowEncodingVersion":"1.0","parameterProviders":{},"latest":false}